services:
    manager:
        image: manager
        build:
            context: ./manager
        depends_on:
            - redis
            - worker
        expose:
            - "8080"
        networks:
            - crackhash-net
        environment:
            CRACKHASH_MANAGER_ALPHABET:       ${CRACKHASH_MANAGER_ALPHABET}
            CRACKHASH_MANAGER_NWORKERS:       ${CRACKHASH_MANAGER_NWORKERS}
            CRACKHASH_MANAGER_WORKER_HOST:    ${CRACKHASH_MANAGER_WORKER_HOST}
            CRACKHASH_MANAGER_WORKER_PORT:    ${CRACKHASH_MANAGER_WORKER_PORT}
            CRACKHASH_MANAGER_REDIS_HOST:     ${CRACKHASH_MANAGER_REDIS_HOST}
            CRACKHASH_MANAGER_REDIS_PORT:     ${CRACKHASH_MANAGER_REDIS_PORT}
            CRACKHASH_MANAGER_REDIS_PASSWORD: ${CRACKHASH_MANAGER_REDIS_PASSWORD}
            CRACKHASH_MANAGER_REDIS_DB:       ${CRACKHASH_MANAGER_REDIS_DB}
    worker:
        image: worker
        build:
            context: ./worker
        expose:
            - "8081"
        networks:
            - crackhash-net
        environment:
            CRACKHASH_WORKER_MANAGER_HOST: ${CRACKHASH_WORKER_MANAGER_HOST}
            CRACKHASH_WORKER_MANAGER_PORT: ${CRACKHASH_WORKER_MANAGER_PORT}
        deploy:
            replicas: 8
    redis:
        image: redis:latest
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 5s
        networks:
            - crackhash-net
    nginx:
        image: nginx:latest
        depends_on:
            - manager
        ports:
            - "80:80"
        networks:
            - crackhash-net
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        restart: unless-stopped

networks:
    crackhash-net:
        driver: bridge

